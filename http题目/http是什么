

1，http就是超文本传输协议


2，http协议  是一个用在计算机世界的协议，它使用计算机能够理解的语言确立了一种计算机之间交流通信的规范，以及相关的各种控制和错误处理方式（行为约定和规范）


3、HTTP 是一个在计算机世界里专门在「两点」之间「传输」文字、图片、音频、视频等「超文本」数据的「约定和规范」

4，http常见的状态码

1xx：提示信息，表示目前是协议处理的中间状态，还需要后续的操作

2xx：成功，保温已经收到并被正确处理

3xx：重定向，资源位置发生变动，需要客户端重新发送请求

4xx：客户端错误，请求报文有误，服务器无法处理

5xx:服务器错误，服务器在处理请求时内部发生了错误


301：表示永久的重定向，说明请求的资源已经不存在了。需要新的url进行访问

302：表示临时重定向，说明请求的资源还在，但是暂时需要另一个url来访问

301和302都会在响应头里使用字段location，指明后续要跳转的url。浏览器会自动重新定向新的url

304：不具有跳转的含义，表示资源未修改，重定向已存在的缓存文件，也称缓存重定向，用于缓存控制


400：表示客户端请求的报文有错误，但只是一个笼统的错误

403：表示服务器禁止访问资源，不是客户端的请求出错

404：表示请求的资源在服务器上不存在或者找不到

500：和400类似，笼统的错误，发生什么服务器不知道

501：客户端请求的功能还不支持

502： 通常是服务器作为网关或者代理时返回的错误码，服务器的工作正常，访问后台服务器发生错误

503：表示服务器当时很忙，暂时无法响应，请稍后重试


4，GET和POST的区别

GET方法的含义是请求从服务器获取资源，这个资源可以是静态的文本，页面，图片视频等

POST方法则是相反操作，它向url指定的资源提交数据，数据就放在报文的body里

GET比POST更不安全，因为参数直接暴露在URL上，所以不能传递敏感信息，Post放在 Request body中

Get请求有长度限制，而Post没有

最大的区别：！！！！！！
Get请求产生一个TCP数据包，而Post产生两个TCP数据包

对于Get方式的请求，浏览器会把http hrader和data一并发出去，服务器返回数据

对于Post请求，浏览器先发送header，服务器响应 100continue，浏览器再发送data，服务器返回数据



5，http特性

 http基本的报文格式就是header + body


 6,http和https有哪些区别

 http是超文本传输协议，信息是明文传输，存在安全风险的问题，HTTPS则解决http安全的缺陷，再TCP和HTTP网络层之间加入了SSL/TLS安全协议，使报文能巩固加密传输

 HTTP再TCP三次握手之后便可进行传输，而HTTPS则再握手后进行SSL/TLS的握手过程，才可以传输

 HTTP端口号是80  HTTPS的端口号是443


 HTTPS协议需要向CA（证书权威机构）申请数字证书，来保证服务器的身份是可信的


信息加密：交互信息无法被窃取，但你的号会因为「自身忘记」账号而没。
校验机制：无法篡改通信内容，篡改了就不能正常显示，但百度「竞价排名」依然可以搜索垃圾广告。
身份证书：证明淘宝是真的淘宝网，但你的钱还是会因为「剁手」而没。

HTTPS 是如何解决上面的三个风险的？

混合加密的方式实现信息的机密性，解决了窃听的风险。
摘要算法的方式来实现完整性，它能够为数据生成独一无二的「指纹」，指纹用于校验数据的完整性，解决了篡改的风险。
将服务器公钥放入到数字证书中，解决了冒充的风险。



cookie sessionstorage localstorage

如果不在浏览器中设置过期事件，cookie被保存在内存中，生命周期随浏览器的关闭而结束，这种cookie简称为会话cookie。如果在浏览器中设置了cookie的过期事件，cookie会被保存在硬盘中，关闭浏览器后，cookie数据仍然存在，直到过期事件结束才消失。cookie是服务端发给客户端的特殊信息，cookie是以文本的方式保存在客户端，每次请求时都带上它


cookie设置事件保存在客户端的内存中，不设置事件保存在浏览器内存中



不同浏览器无法共享localStorage或sessionStorage中的信息。相同浏览器的不同页面间可以共享相同的 localStorage（页面属于相同域名和端口）


cookie一般由服务器生成，大小再4KB左右，可设置失效的事件，如果在浏览器端生成cookie，默认关闭浏览器后失效

localstorage 永久保存  大小5MB  保存在浏览器中

sessionstorage 大小5MB  关闭浏览器后失效   保存在服务器中